---
title: "Kraken"
engine: julia
---

{{< include jdoc.snippet >}}

| <span> | <span> |
|---|---|
| **Model** | `AcousticsToolbox.Kraken` |
| **Description** | [Kraken and KrakenC normal mode models](https://oalib-acoustics.org/models-and-software/normal-modes/) (wrapper) |
| **Language** | Fortran |
| **Advantages** | Well-established benchmark models |
| **Limitations** | Not differentiable |

: {tbl-colwidths="[25,75]"}

```{julia}
#| echo: false
#| output: asis
import AcousticsToolbox
jdoc(AcousticsToolbox, :Kraken, 2)
```

A good overview of the Kraken model can be found at:

- M. B. Porter, "The KRAKEN normal mode program", Technical report NRL/MR/5120-92-6920, Naval Research Laboratory, 1992 [(original report pdf)](https://apps.dtic.mil/sti/tr/pdf/ADA252409.pdf) [(updated draft pdf)](https://oalib-acoustics.org/website_resources/Modes/kraken.pdf).

## Examples

### Range-independent scenario

Here's an example showing results for the PEKERIS test problem from the Kraken technical report:

```{julia}
#| echo: false
#| output: false
using Plots
default(size=(600, 400))
```

```{julia}
using UnderwaterAcoustics
using AcousticsToolbox
using Plots

env = UnderwaterEnvironment(
  bathymetry = 5000,
  soundspeed = 1500,
  density = 1000,
  seabed = FluidBoundary(2000, 2000)
)
pm = Kraken(env)

tx = AcousticSource(0, -500, 10)
rx = AcousticReceiver(200000, -2500)
modes = arrivals(pm, tx, rx)[1:7]     # first 7 modes
```
```{julia}
# plot the modes
plot(modes)
```
```{julia}
rxs = AcousticReceiverGrid2D(200000:10:220000, -2500)
x = transmission_loss(pm, tx, rxs)

plot(200:0.01:220, x; ylims=(70,110), yflip=true, legend=false,
  xlabel="Range (km)", ylabel="Transmission loss (dB)")
```

### Range-dependent scenario with multilayered seabed

While the Kraken model is range-independent by itself, it can be made range-dependent by using `AdiabaticExt` as shown below:

```{julia}
using UnderwaterAcoustics
using Plots

env = UnderwaterEnvironment(
  bathymetry = SampledField([200, 150, 200]; x=[0, 2000, 5000], interp=:linear),
  soundspeed = 1500,
  density = 1000,
  seabed = MultilayerElasticBoundary([
    (40, 1374, 1520, 0, dBperλ(0.1124), 0),           # 40m thick fluid sediment
    (Inf, 2200, 1730, 800, dBperλ(0.5), dBperλ(0.5))  # hard half-space substrate
  ])
)

# use an adiabatic extension to the Kraken for range-dependence
pm = AdiabaticExt(Kraken, env)

tx = AcousticSource(0, -50, 250)
rx = AcousticReceiver(7000, -25)
modes = arrivals(pm, tx, rx)[1:7]      # first 7 modes
```
```{julia}
# plot the modes at 7 km range
plot(modes)
hline!([-200])    # seabed location
```
```{julia}
rxs = AcousticReceiverGrid2D(10:10:7000, -200:1)
x = transmission_loss(pm, tx, rxs)

plot(rxs, x; crange=50)
plot!(env)
```

## Notes

The Fortran Kraken propagation model requires that the transmitter is located at $(x=0, y=0)$ and all receivers are located in the right half-plane (i.e., $x>0$ and $y=0$). While this limitation can be worked around in the wrapper by a coordinate transformation, automatic transformation is not yet implemented.

Additionally, this wrapper does not yet support all the features of the original Fortran model. In particular, it does NOT support:

- N2-linear, analytic or quadratic interpolation for sound speed
- Arbitrary reflection coefficients
- Twersky scattering

Receivers on an irregular grid are supported, but not currently optimized for speed (by using the irregular grid option in the Fortran model).

Kraken currently does not compute modal group velocities. While KrakenC does compute group velocities, the values are incorrect for multilayer seabeds with elastic sediment layers. In both cases, when group velocities are unavailable, the returned modes will not include group velocity information (will be reported as `missing`).
